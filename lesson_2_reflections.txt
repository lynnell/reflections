
git init
When you initialize the repository, Git doesn't create any commits for you. You have to create the first commit yourself. 

Why would you NOT want Git to do the first commit automatically?  Two reasons - 1. you may not want to commit everything in the respository
 2. you wouldn't be able to put your own comments in the commit message. 

 Staging Area contains files added, but not yet committed. 

 git commit

 git commit -m "Commit message goes here"

 git diff
 with no args shows difference bet working directory and staging directory

 git diff --staged
 shows differences bet staging area and repository commit 1 (latest commit)

git diff commit1 commit2  
shows differences bet two commits in repository old, then new.

git branch
shows branches

git branch easy
creates a new branch named easy

running git branch again will show the two branches:
* master
easy

the * by master shows that it is the currently checked out branch

to change to the new branch do:
git checkout easy

git log --graph --oneline master coins

git checkout -b new_branch_name
this is the same as the following two commands
git branch new_branch_name
git checkout new_branch_name

git merge master coins
this will merge coins to the master branch

git show <commit #>
this will display the changes between the commit # specified and its parent.

git branch -d coins
this will delete the coins branch since it is no longer needed because it was merged to master. The cool thing is that checkouts can be made on any of the commits from the coin branch because the history is kept.

git log -n 1
This means that git will only show that number of commits. In this case, 1. 

git remote 
git remote add origin https://github.com/lynnell/reflections.git
git remote -v     (the -v is for verbose
git push origin master





